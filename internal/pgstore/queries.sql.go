// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package pgstore

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const insertTrip = `-- name: InsertTrip :one
INSERT INTO trips (
  "destination", "owner_email", "owner_name", "starts_at", "ends_at"
) VALUES (
  $1, $2, $3, $4, $5
) RETURNING "id"
`

type InsertTripParams struct {
	Destination string           `db:"destination" json:"destination"`
	OwnerEmail  string           `db:"owner_email" json:"owner_email"`
	OwnerName   string           `db:"owner_name" json:"owner_name"`
	StartsAt    pgtype.Timestamp `db:"starts_at" json:"starts_at"`
	EndsAt      pgtype.Timestamp `db:"ends_at" json:"ends_at"`
}

func (q *Queries) InsertTrip(ctx context.Context, arg InsertTripParams) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, insertTrip,
		arg.Destination,
		arg.OwnerEmail,
		arg.OwnerName,
		arg.StartsAt,
		arg.EndsAt,
	)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
